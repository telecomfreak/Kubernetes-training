#!/bin/bash

USER=john
NAMESPACE=research

##########################################
# CREATE NAMESPACE
##########################################
kubectl create ns $NAMESPACE

##########################################
# CREATE CLUSTER CONFIG
##########################################

# get name, URL and CA certificate of cluster from own kubeconfig 
CLUSTERNAME=$(kubectl config view -o jsonpath='{.clusters[0].name}')
CLUSTERURL=$(kubectl config view -o jsonpath='{.clusters[0].cluster.server}')
kubectl config view -o jsonpath='{.clusters[0].cluster.certificate-authority-data}' --raw | base64 --decode > cluster-ca.crt

# create kubeconfig for $USER \u2013 cluster information
kubectl config set-cluster $CLUSTERNAME --server=$CLUSTERURL --certificate-authority=cluster-ca.crt --kubeconfig=$USER-kubeconfig --embed-certs

##########################################
# CREATE USER CONFIG
##########################################

# create service account
kubectl create sa $USER -n $NAMESPACE

# get secret name from service account
SECRET=$(kubectl get sa $USER -n $NAMESPACE -o "jsonpath={.secrets[0].name}")

# get token from secret
TOKEN=$(kubectl get secret $SECRET -n $NAMESPACE -o "jsonpath={.data.token}" | base64 -d)

# create kubeconfig for $USER \u2013 user information
kubectl config set-credentials $USER --token=$TOKEN --kubeconfig=$USER-kubeconfig

##########################################
# CREATE CONTEXT CONFIG
##########################################

# create kubeconfig for $USER \u2013 context information
kubectl config set-context $USER-ctx --cluster=$CLUSTERNAME  --namespace=$NAMESPACE  --user=$USER --kubeconfig=$USER-kubeconfig
kubectl config use-context $USER-ctx --kubeconfig=$USER-kubeconfig

##########################################
# INSTALL NEW KUBECONFIG FOR USER
##########################################

# create the requested user as a Linux user
sudo useradd -m $USER

# copy kubeconfig to directory ~$USER/.kube
sudo mkdir                 /home/$USER/.kube
sudo cp $USER-kubeconfig   /home/$USER/.kube/config
sudo chmod 600             /home/$USER/.kube/config
sudo chown -R $USER:$USER /home/$USER/.kube
